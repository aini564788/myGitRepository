<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmh.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.lmh.pojo.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="headimageurl" jdbcType="VARCHAR" property="headimageurl" />
    <result column="mobile_number" jdbcType="VARCHAR" property="mobileNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_user_id" jdbcType="BIGINT" property="modifyUserId" />
    <result column="sex" jdbcType="CHAR" property="sex" />
  </resultMap>
  <resultMap id="userRoleMap" type="UserRoleExpand" extends="BaseResultMap">
    <collection property="list" ofType="role" resultMap="com.lmh.mapper.RoleMapper.BaseResultMap"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_account, user_name, password, headimageurl, mobile_number, email, status, 
    last_login_time, create_time, create_user_id, modify_time, modify_user_id, sex
  </sql>
  <select id="selectByExample" parameterType="com.lmh.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sy_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sy_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmh.pojo.UserExample">
    delete from sy_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmh.pojo.User">
    insert into sy_user (user_id, user_account, user_name, 
      password, headimageurl, mobile_number, 
      email, status, last_login_time, 
      create_time, create_user_id, modify_time, 
      modify_user_id, sex)
    values (#{userId,jdbcType=BIGINT}, #{userAccount,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{headimageurl,jdbcType=VARCHAR}, #{mobileNumber,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifyUserId,jdbcType=BIGINT}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lmh.pojo.User">
    insert into sy_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="headimageurl != null">
        headimageurl,
      </if>
      <if test="mobileNumber != null">
        mobile_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyUserId != null">
        modify_user_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headimageurl != null">
        #{headimageurl,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmh.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from sy_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sy_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userAccount != null">
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.headimageurl != null">
        headimageurl = #{record.headimageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileNumber != null">
        mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUserId != null">
        modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sy_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      headimageurl = #{record.headimageurl,jdbcType=VARCHAR},
      mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmh.pojo.User">
    update sy_user
    <set>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="headimageurl != null">
        headimageurl = #{headimageurl,jdbcType=VARCHAR},
      </if>
      <if test="mobileNumber != null">
        mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null">
        modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmh.pojo.User">
    update sy_user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      headimageurl = #{headimageurl,jdbcType=VARCHAR},
      mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
<!--登录时查询用户 -->
  <select id="selectByPassword" resultMap="BaseResultMap">
    select * from sy_user where user_account=#{userAccount} and password=#{password}
  </select>
<!--修改头像  -->
  <update id="updateHeadImage">
    update sy_user set headimageurl=#{headImage} where user_id=#{id}
  </update>
<!--修改密码  -->
  <update id="updatePassword">
    update sy_user set password=#{password} where user_id=#{id}
  </update>
<!--分页查询数据  -->
  <select id="queryDataByPages" resultMap="userRoleMap">
       select u.user_id,u.user_account,u.user_name,
u.mobile_number,u.email,u.status,u.sex, r.* from
  (select * from sy_user
    <where>
      <if test=" no!=null and no!=''">
       and ( user_id like "%"#{no}"%" or user_account like "%"#{no}"%")
      </if>
      <if test="mobileNumber!=null and mobileNumber!=''">
         and (mobile_number like "%"#{mobileNumber}"%" )
      </if>
      <if test="status!=null">
        and (status =#{status} )
      </if>
    </where>
    limit #{page},#{limit}
   )
    as u left join sys_user_role as ur on u.user_id=ur.sys_user_id left join sy_role
    as r on r.role_ukid=ur.sys_role_id

  </select>
 <!--查询总个数-->
  <select id="selectCount" resultType="long">
    select count(1) from sy_user
    <where>
      <if test="no!=null and no!=''">
        and ( user_id like concat("%",#{no},"%") or user_account like concat("%",#{no},"%") )
      </if>
      <if test="mobileNumber!=null and mobileNumber !=''">
        and (mobile_number like  concat("%",#{mobileNumber},"%"))
      </if>
      <if test="status!=null and status!=''">
        and (status=#{status})
      </if>
    </where>
  </select>
<delete id="deleteBatch">
  delete from sy_user where user_id in
  <foreach collection="ids" separator="," item="id" close=")" open="(">
    #{id}
  </foreach>
</delete>
<!--修改角色激活状态  -->
  <update id="updateStatus">
    update sy_user set status=#{status} where user_id=#{userId}
  </update>
<!--删除中间表权限  -->
  <delete id="deleteRole">
    delete from sys_user_role where sys_user_id=#{userId}
  </delete>
<!--添加新的权限 -->
 <insert id="insertRole">
   insert into sys_user_role (sys_user_id,sys_role_id)
   <foreach collection="rids" separator="," open="values" item="rid" close="">
     (#{uid},#{rid})
   </foreach>
 </insert>
<!--三表关联查询当前用户拥有的角色  -->
  <select id="queryRoleByUserName" resultType="string">
    select r.role_name
    from sy_user as u
    join sys_user_role as ur on u.user_id=ur.sys_user_id
    join sy_role as r on ur.sys_role_id = r.role_ukid
    where u.user_account=#{userName}
  </select>
<!--五表关联查询当前用户拥有的权限  -->
  <select id="queryPermissionsByUserName" resultType="string">
    SELECT p.`percode`
    FROM sy_user AS u
    JOIN sys_user_role AS ur ON u.user_id=ur.sys_user_id
    JOIN sy_role AS r ON ur.sys_role_id = r.role_ukid
    JOIN sys_role_permission AS rp ON rp.`sys_role_id`= r.`role_ukid`
    JOIN sys_permission AS p ON rp.`sys_permission_id`= p.`per_id`
    WHERE u.`user_account`=#{userName} GROUP BY p.`per_id`
  </select>
</mapper>